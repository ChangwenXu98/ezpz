#!/bin/bash --login

HOSTNAME=$(hostname)
PBS_ENV_FILE="${HOME}/.pbsenv"
COBALT_ENV_FILE="${HOME}/.cobaltenv"
SLURM_ENV_FILE="${HOME}/.slurmenv"

function join_by { local d=${1-} f=${2-}; if shift 2; then printf %s "$f" "${@/#/$d}"; fi; }


function getCOBALT_NODEFILE() {
    RUNNING_JOB_FILE="/var/tmp/cobalt-running-job"
    if [[ -f "$RUNNING_JOB_FILE" ]]; then
        JOBID=$(sed "s/:$USER//" /var/tmp/cobalt-running-job)
        COBALT_NODEFILE="/var/tmp/cobalt.${JOBID}"
        export JOBID="${JOBID}"
        export HOSTFILE="${HOSTFILE}"
        export COBALT_NODEFILE="${COBALT_NODEFILE}"
    fi
}

function saveCOBALTenv() {
    if [[ $(hostname) == thetagpu* ]]; then
        COBALT_VARS=$(env | grep COBALT)
        echo "│ Writing COBALT vars to ${COBALT_ENV_FILE}"
        echo "${COBALT_VARS[*]}" > "${COBALT_ENV_FILE}"
        sed -i 's/^COBALT/export\ COBALT/g' "${COBALT_ENV_FILE}"
        export HOSTFILE="${COBALT_NODEFILE}"
        export JOBENV_FILE="${COBALT_ENV_FILE}"
    fi
}


function savePBSenv() {
    if [[ $(hostname) == x3* ]]; then
        PBS_VARS=$(env | grep PBS)
        echo "Writing PBS vars to ${PBS_ENV_FILE}"
        echo "${PBS_VARS[*]}" > "${PBS_ENV_FILE}"
        sed -i 's/^PBS/export\ PBS/g' "${PBS_ENV_FILE}"
        export HOSTFILE="${PBS_NODEFILE}"
        export JOBENV_FILE="${PBS_ENV_FILE}"
    fi
}


function saveSlurmEnv() {
    if [[ $(hostname) == nid* || $(hostname) == login* ]]; then
        SLURM_VARS=$(env | grep SLU)
        echo "Saving SLURM_* to ${SLURM_ENV_FILE}"
        echo "${SLURM_VARS[*]}" > "${SLURM_ENV_FILE}"
        sed -i 's/^SLURM/export\ SLURM/g' "${SLURM_ENV_FILE}"
        sed -i 's/(x2)//g' "${SLURM_ENV_FILE}"
        SLURM_NODES=$(scontrol show hostname "${SLURM_NODELIST}")
        SLURM_NODEFILE="${HOME}/.slurm-nodefile"
        printf "%s\n" "${SLURM_NODES[@]}" > "${SLURM_NODEFILE}"
        export HOSTFILE="${SLURM_NODEFILE}"
        export JOBENV_FILE="${SLURM_ENV_FILE}"
    fi
}


function envSave() {
    echo "┌──────────────────────────────────────────────────────────────────┐"
    if [[ $(hostname) == x3* ]]; then
        echo "│ Saving PBS env to ${PBS_ENV_FILE} from ${HOSTNAME}"
        savePBSenv
    elif [[ $(hostname) == theta* ]]; then
        echo "│ Saving COBALT env to ${COBALT_ENV_FILE} from ${HOSTNAME}"
        saveCOBALTenv
    elif [[ $(hostname) == nid* || $(hostname) == login* ]]; then
        saveSlurmEnv
    else
        echo "│ Unexpected hostname: ${HOSTNAME}"
        HOSTFILE="hostfile"
        hostname > "${HOSTFILE}"
    fi
    echo "└──────────────────────────────────────────────────────────────────┘"
    {
        echo "export HOSTFILE=${HOSTFILE}"
        echo "export ${FNAME}=${HOSTFILE}"
        echo "export NHOSTS=${NHOSTS}"
        echo "export NGPU_PER_HOST=${NGPU_PER_HOST}"
        echo "export NGPUS=${NGPUS}"
    } > "${JOBENV_FILE}"
}


function setup() {
    if [[ "${HOSTNAME}" == x3* ]]; then
        export FNAME="PBS_NODEFILE"
        export HOSTFILE="${PBS_NODEFILE}"
        export JOBENV_FILE="${PBS_ENV_FILE}"
        alias mpilaunch="mpiexec --verbose --envall -n ${NGPUS} -ppn $NGPU_PER_HOST --hostfile ${PBS_NODEFILE}"
        echo "${PBS_NODEFILE}" | rpbcopy
    elif [[ "${HOSTNAME}" == thetagpu* ]]; then
        getCOBALT_NODEFILE
        export FNAME="COBALT_NODEFILE"
        export HOSTFILE="${COBALT_NODEFILE}"
        export JOBENV_FILE="${COBALT_ENV_FILE}"
        alias mpilaunch="mpirun -n ${NGPUS} -N ${NGPU_PER_HOST} --hostfile ${COBALT_NODEFILE} -x PATH -x LD_LIBRARY_PATH"
        echo "${COBALT_NODEFILE}" | rpbcopy
    elif [[ $(hostname) == nid* || $(hostname) == login* ]]; then
        export FNAME="SLURM_NODEFILE"
        export HOSTFILE="${SLURM_NODEFILE}"
        export JOBENV_FILE="${SLURM_ENV_FILE}"
        alias mpilaunch="srun -N ${NHOSTS} -n ${NGPUS} -l -u"
        echo "${SLURM_NODEFILE}" | rpbcopy
    fi
    NHOSTS=$(wc -l < "${HOSTFILE}")
    NGPU_PER_HOST=$(nvidia-smi -L | wc -l)
    NGPUS="$(( NHOSTS * NGPU_PER_HOST ))"  # noqa
    echo "┌──────────────────────────────────────────────────────────────────┐"
    echo "│ [DIST INFO]: "
    echo "│   • Writing Job info to ${JOBENV_FILE}"
    echo "│       • NHOSTS: $NHOSTS "
    echo "│       • NGPU_PER_HOST: $NGPU_PER_HOST "
    echo "│       • NGPUS = (NHOSTS * NGPU_PER_HOST) = $NGPUS"
    echo "└──────────────────────────────────────────────────────────────────┘"
    export NHOSTS="${NHOSTS}"
    export NGPU_PER_HOST="${NGPU_PER_HOST}"
    export NGPUS="${NGPUS}"
    envSave
}


PrintAndCopy() {
    HOSTS_ARR=$(cat "${HOSTFILE}")
    HOSTS=$(join_by ' ' "${HOSTS_ARR}")
    echo "┌──────────────────────────────────────────────────────────────────┐"
    echo "│ Copying ${FNAME} to clipboard..."
    echo "│ ${FNAME}: ${HOSTFILE}"
    echo "│ [Hosts]: "
    echo "│   ${HOSTS[*]}"
    echo "└──────────────────────────────────────────────────────────────────┘"
    # cat "${HOSTFILE}"
    echo "${HOSTFILE}" | rpbcopy
    echo "export ${FNAME}=${HOSTFILE}" | rpbcopy
    echo "┌───────────────────────────────────────────────────────────────────────┐"
    echo "│ Run 'source getjobenv' in a NEW SHELL to automatically set env vars   │"
    echo "└───────────────────────────────────────────────────────────────────────┘"
}

setup
PrintAndCopy
# vim: ft=bash
